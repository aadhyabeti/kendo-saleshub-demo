@using System.Collections
@using Kendo.Mvc.UI;
@using SalesHub.Client.ViewModels.Api;

@model OrderDetailViewModel

<ul class="errors"></ul>

@Html.HiddenFor(model => model.OrderDetailId)

<div class="editor-label">
    @Html.LabelFor(model => model.Origin)
</div>
<div class="editor-field">
    @Html.Kendo().DropDownListFor(m => m.Origin).BindTo((System.Collections.IEnumerable) ViewData["Origins"]).DataTextField("Name").DataValueField("Value").OptionLabel("Select an Origin")
    @Html.ValidationMessageFor(model => model.Origin)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.PackageTypeId, "Package Type")
</div>
<div class="editor-field">
    @Html.Kendo().DropDownListFor(m => m.PackageTypeId).BindTo((IEnumerable<SelectListItem>) ViewData["PackageTypes"]).OptionLabel("Select a Package Type")
    @Html.ValidationMessageFor(model => model.PackageTypeId)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.NetWeight)
</div>
<div class="editor-field">
    @Html.Kendo().NumericTextBoxFor(model => model.NetWeight).Decimals(2).Events(events => events.Change("window.SalesHub.OrderDetailsEdit_NetWeight_Change"))
    @Html.ValidationMessageFor(model => model.NetWeight)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.UnitWeight)
</div>
<div class="editor-field">
    @Html.Kendo().NumericTextBoxFor(model => model.UnitWeight).Decimals(2).Events(events => events.Change("window.SalesHub.OrderDetailsEdit_UnitWeight_Change"))
    @Html.ValidationMessageFor(model => model.UnitWeight)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Units)
</div>
<div class="editor-field">
    @Html.Kendo().NumericTextBoxFor(model => model.Units).Format("n0").Events(events => events.Change("window.SalesHub.OrderDetailsEdit_Units_Change"))
    @Html.ValidationMessageFor(model => model.Units)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.PricePerUnitOfWeight)
</div>
<div class="editor-field">
    @Html.Kendo().NumericTextBoxFor(model => model.PricePerUnitOfWeight).Decimals(10)
    @Html.ValidationMessageFor(model => model.PricePerUnitOfWeight)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ValueDate)
</div>
<div class="editor-field">
    @Html.Kendo().DatePickerFor(model => model.ValueDate)
    @Html.ValidationMessageFor(model => model.ValueDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Destination)
</div>
<div class="editor-field">
    @Html.Kendo().DropDownListFor(model => model.Destination).BindTo((IEnumerable)ViewData["Destinations"]).DataValueField("Value").DataTextField("Name")
    @Html.ValidationMessageFor(model => model.Destination)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.LotNumber)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.LotNumber, new { @class = "k-textbox" })
    @Html.ValidationMessageFor(model => model.LotNumber)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CropYear)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.CropYear, new { @class = "k-textbox" })
    @Html.ValidationMessageFor(model => model.CropYear)
</div>